"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

const Queue = require('then-queue');

function pushToAsyncIterable(stream) {
  const queue = new Queue();
  let paused = false;
  let ended = false;
  stream.onData(value => {
    if (!ended) {
      queue.push({
        done: false,
        value
      });

      if (!paused && queue.length >= stream.highWaterMark) {
        paused = true;
        stream.pause();
      }
    }
  });
  stream.onError(err => {
    if (!ended) {
      ended = true;
      queue.push({
        done: true,
        err
      });

      if (paused) {
        paused = false;
        stream.resume();
      }
    }
  });
  stream.onEnd(() => {
    if (!ended) {
      ended = true;
      queue.push({
        done: true,
        err: undefined
      });

      if (paused) {
        paused = false;
        stream.resume();
      }
    }
  });
  return queueConsumer(queue, () => {
    if (paused && queue.length < stream.highWaterMark) {
      paused = false;
      stream.resume();
    }
  });
}

exports.default = pushToAsyncIterable;

async function* queueConsumer(queue, onPop) {
  let value = await queue.pop();

  while (!value.done) {
    yield value.value;
    const next = queue.pop();
    onPop();
    value = await next;
  }

  if (value.err) {
    throw value.err;
  }
}